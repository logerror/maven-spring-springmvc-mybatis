<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.work.dao.UserDao" >
  <resultMap id="BaseResultMap" type="com.work.pojo.User" >
    <id column="ID" property="id" jdbcType="BIGINT" />
    <result column="LOGINNAME" property="loginname" jdbcType="VARCHAR" />
    <result column="PASSWORD" property="password" jdbcType="VARCHAR" />
    <result column="REALNAME" property="realname" jdbcType="VARCHAR" />
    <result column="GENDER" property="gender" jdbcType="VARCHAR" />
    <result column="PHONENUMBER" property="phonenumber" jdbcType="VARCHAR" />
    <result column="EMAIL" property="email" jdbcType="VARCHAR" />
    <result column="AGE" property="age" jdbcType="INTEGER" />
    <result column="IMAGEADDRESS" property="imageaddress" jdbcType="VARCHAR" />
    <result column="EDUCATION" property="education" jdbcType="VARCHAR" />
    <result column="NOTE" property="note" jdbcType="VARCHAR" />
    <result column="DEPARTMENTID" property="departmentid" jdbcType="BIGINT" />
  </resultMap>
  <sql id="Base_Column_List" >
    ID, LOGINNAME, PASSWORD, REALNAME, GENDER, PHONENUMBER, EMAIL, AGE, IMAGEADDRESS, 
    EDUCATION, NOTE, DEPARTMENTID
  </sql>
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Long" >
    select 
    <include refid="Base_Column_List" />
    from user
    where ID = #{id,jdbcType=BIGINT}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Long" >
    delete from user
    where ID = #{id,jdbcType=BIGINT}
  </delete>
  <insert id="insert" parameterType="com.work.pojo.User" >
    insert into user (ID, LOGINNAME, PASSWORD, 
      REALNAME, GENDER, PHONENUMBER, 
      EMAIL, AGE, IMAGEADDRESS, 
      EDUCATION, NOTE, DEPARTMENTID
      )
    values (#{id,jdbcType=BIGINT}, #{loginname,jdbcType=VARCHAR}, #{password,jdbcType=VARCHAR}, 
      #{realname,jdbcType=VARCHAR}, #{gender,jdbcType=VARCHAR}, #{phonenumber,jdbcType=VARCHAR}, 
      #{email,jdbcType=VARCHAR}, #{age,jdbcType=INTEGER}, #{imageaddress,jdbcType=VARCHAR}, 
      #{education,jdbcType=VARCHAR}, #{note,jdbcType=VARCHAR}, #{departmentid,jdbcType=BIGINT}
      )
  </insert>
  <insert id="insertSelective" parameterType="com.work.pojo.User" >
    insert into user
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        ID,
      </if>
      <if test="loginname != null" >
        LOGINNAME,
      </if>
      <if test="password != null" >
        PASSWORD,
      </if>
      <if test="realname != null" >
        REALNAME,
      </if>
      <if test="gender != null" >
        GENDER,
      </if>
      <if test="phonenumber != null" >
        PHONENUMBER,
      </if>
      <if test="email != null" >
        EMAIL,
      </if>
      <if test="age != null" >
        AGE,
      </if>
      <if test="imageaddress != null" >
        IMAGEADDRESS,
      </if>
      <if test="education != null" >
        EDUCATION,
      </if>
      <if test="note != null" >
        NOTE,
      </if>
      <if test="departmentid != null" >
        DEPARTMENTID,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        #{id,jdbcType=BIGINT},
      </if>
      <if test="loginname != null" >
        #{loginname,jdbcType=VARCHAR},
      </if>
      <if test="password != null" >
        #{password,jdbcType=VARCHAR},
      </if>
      <if test="realname != null" >
        #{realname,jdbcType=VARCHAR},
      </if>
      <if test="gender != null" >
        #{gender,jdbcType=VARCHAR},
      </if>
      <if test="phonenumber != null" >
        #{phonenumber,jdbcType=VARCHAR},
      </if>
      <if test="email != null" >
        #{email,jdbcType=VARCHAR},
      </if>
      <if test="age != null" >
        #{age,jdbcType=INTEGER},
      </if>
      <if test="imageaddress != null" >
        #{imageaddress,jdbcType=VARCHAR},
      </if>
      <if test="education != null" >
        #{education,jdbcType=VARCHAR},
      </if>
      <if test="note != null" >
        #{note,jdbcType=VARCHAR},
      </if>
      <if test="departmentid != null" >
        #{departmentid,jdbcType=BIGINT},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="com.work.pojo.User" >
    update user
    <set >
      <if test="loginname != null" >
        LOGINNAME = #{loginname,jdbcType=VARCHAR},
      </if>
      <if test="password != null" >
        PASSWORD = #{password,jdbcType=VARCHAR},
      </if>
      <if test="realname != null" >
        REALNAME = #{realname,jdbcType=VARCHAR},
      </if>
      <if test="gender != null" >
        GENDER = #{gender,jdbcType=VARCHAR},
      </if>
      <if test="phonenumber != null" >
        PHONENUMBER = #{phonenumber,jdbcType=VARCHAR},
      </if>
      <if test="email != null" >
        EMAIL = #{email,jdbcType=VARCHAR},
      </if>
      <if test="age != null" >
        AGE = #{age,jdbcType=INTEGER},
      </if>
      <if test="imageaddress != null" >
        IMAGEADDRESS = #{imageaddress,jdbcType=VARCHAR},
      </if>
      <if test="education != null" >
        EDUCATION = #{education,jdbcType=VARCHAR},
      </if>
      <if test="note != null" >
        NOTE = #{note,jdbcType=VARCHAR},
      </if>
      <if test="departmentid != null" >
        DEPARTMENTID = #{departmentid,jdbcType=BIGINT},
      </if>
    </set>
    where ID = #{id,jdbcType=BIGINT}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.work.pojo.User" >
    update user
    set LOGINNAME = #{loginname,jdbcType=VARCHAR},
      PASSWORD = #{password,jdbcType=VARCHAR},
      REALNAME = #{realname,jdbcType=VARCHAR},
      GENDER = #{gender,jdbcType=VARCHAR},
      PHONENUMBER = #{phonenumber,jdbcType=VARCHAR},
      EMAIL = #{email,jdbcType=VARCHAR},
      AGE = #{age,jdbcType=INTEGER},
      IMAGEADDRESS = #{imageaddress,jdbcType=VARCHAR},
      EDUCATION = #{education,jdbcType=VARCHAR},
      NOTE = #{note,jdbcType=VARCHAR},
      DEPARTMENTID = #{departmentid,jdbcType=BIGINT}
    where ID = #{id,jdbcType=BIGINT}
  </update>
</mapper>